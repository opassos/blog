{
  
    
        "post0": {
            "title": "Tutorial Gatos-vs-Cachorros-üôÄxüê∂",
            "content": ". from IPython.display import YouTubeVideo YouTubeVideo(&#39;-Sw87Dyh3Kss&#39;) . https://youtu.be/Sw87Dyh3Kss . Setup . !nvidia-smi . Fri Oct 15 16:26:50 2021 +--+ | NVIDIA-SMI 470.74 Driver Version: 460.32.03 CUDA Version: 11.2 | |-+-+-+ | GPU Name Persistence-M| Bus-Id Disp.A | Volatile Uncorr. ECC | | Fan Temp Perf Pwr:Usage/Cap| Memory-Usage | GPU-Util Compute M. | | | | MIG M. | |===============================+======================+======================| | 0 Tesla V100-SXM2... Off | 00000000:00:04.0 Off | 0 | | N/A 35C P0 23W / 300W | 0MiB / 16160MiB | 0% Default | | | | N/A | +-+-+-+ +--+ | Processes: | | GPU GI CI PID Type Process name GPU Memory | | ID ID Usage | |=============================================================================| | No running processes found | +--+ . !pip install -Uqqq fastai . from fastai.vision.all import * . Baixando o dataset . L(dir(URLs)) . (#95) [&#39;ADULT_SAMPLE&#39;,&#39;AG_NEWS&#39;,&#39;AMAZON_REVIEWS&#39;,&#39;AMAZON_REVIEWS_POLARITY&#39;,&#39;BIWI_HEAD_POSE&#39;,&#39;BIWI_SAMPLE&#39;,&#39;CALTECH_101&#39;,&#39;CAMVID&#39;,&#39;CAMVID_TINY&#39;,&#39;CARS&#39;...] . URLs.PETS . &#39;https://s3.amazonaws.com/fast-ai-imageclas/oxford-iiit-pet.tgz&#39; . path = untar_data(URLs.PETS)/&#39;images&#39; path . Path(&#39;/root/.fastai/data/oxford-iiit-pet/images&#39;) . EDA (Explorando o Dataset) . files = get_image_files(path) . files . (#7390) [Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/British_Shorthair_204.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/boxer_165.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/basset_hound_125.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/Bombay_185.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/wheaten_terrier_92.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/yorkshire_terrier_47.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/Siamese_31.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/British_Shorthair_74.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/beagle_157.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/shiba_inu_176.jpg&#39;)...] . Image.open(path/&#39;pug_116.jpg&#39;) . Image.open(path/&#39;British_Shorthair_201.jpg&#39;) . Dataloader . def labeler(x): return &#39;Gato&#39; if x.name[0].isupper() else &#39;Cachorro&#39; . labeler(path/&#39;British_Shorthair_201.jpg&#39;) . &#39;Gato&#39; . labeler(path/&#39;pug_116.jpg&#39;) . &#39;Cachorro&#39; . files = get_image_files(path) files . (#7390) [Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/British_Shorthair_204.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/boxer_165.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/basset_hound_125.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/Bombay_185.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/wheaten_terrier_92.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/yorkshire_terrier_47.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/Siamese_31.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/British_Shorthair_74.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/beagle_157.jpg&#39;),Path(&#39;/root/.fastai/data/oxford-iiit-pet/images/shiba_inu_176.jpg&#39;)...] . labeler(files[0]) . &#39;Gato&#39; . dblock = DataBlock( blocks = [ImageBlock, CategoryBlock], # blocos que formata os dados splitter = RandomSplitter(valid_pct = 0.2, seed = 42), get_items = get_image_files, # fun√ß√£o que carrega os dados get_y = labeler, # get_x = ... item_tfms = Resize(224), ) dls = dblock.dataloaders(path, num_workers = 2, bs = 64) dls.show_batch() . xb, yb = dls.one_batch() . Learner . learn = cnn_learner(dls, resnet50, metrics=accuracy) . /usr/local/lib/python3.7/dist-packages/torch/nn/functional.py:718: UserWarning: Named tensors and all their associated APIs are an experimental feature and subject to change. Please do not use them for anything important until they are released as stable. (Triggered internally at /pytorch/c10/core/TensorImpl.h:1156.) return torch.max_pool2d(input, kernel_size, stride, padding, dilation, ceil_mode) . Transfer Learning . learn.fine_tune(3) . epoch train_loss valid_loss accuracy time . 0 | 0.090986 | 0.022098 | 0.993911 | 00:51 | . epoch train_loss valid_loss accuracy time . 0 | 0.075581 | 0.028851 | 0.991204 | 00:52 | . 1 | 0.034629 | 0.010006 | 0.995940 | 00:51 | . 2 | 0.016202 | 0.002749 | 0.999323 | 00:51 | . 0.999323 ** 12 . 0.9919061815543482 . Verifica&#231;&#227;o . learn.show_results() . interp = ClassificationInterpretation.from_learner(learn) interp.plot_confusion_matrix() . (996+1+1+480) / 7390 . 0.2 . Testando com uma nova imagem . import ipywidgets as widgets uploader = widgets.FileUpload() uploader . img = PILImage.create(uploader.data[0]) label, _, probs = learn.predict(img) if label == &#39;Gato&#39;: print(f&#39;Isso √© um {label} com {(probs[1].item()*100):.1f}% de certeza&#39;) else: print(f&#39;Isso √© um {label} com {(probs[0].item()*100):.1f}% de certeza&#39;) img.to_thumb(300) . Isso √© um Gato com 100.0% de certeza . Problemas a serem resolvidos . E se a foto for de um le√£o? | E se o cachorro for o Pluto? | E se tivermos gatos e cachorros na foto? | E se a foto for de uma cadeira? | . Data Augmentation . dblock = DataBlock( blocks = [ImageBlock, CategoryBlock], get_items = get_image_files, get_y = labeler, item_tfms = Resize(256), batch_tfms = aug_transforms(mult = 2, size = 224) ) dls = dblock.dataloaders(path, num_workers = 2) . dls.show_batch(unique = True) .",
            "url": "https://opassos.github.io/blog/2021/10/15/Gatos-vs-Cachorros.html",
            "relUrl": "/2021/10/15/Gatos-vs-Cachorros.html",
            "date": " ‚Ä¢ Oct 15, 2021"
        }
        
    
  
    
        ,"post1": {
            "title": "Tutorial Yolov5",
            "content": "Entre no reposit√≥rio github do yolov5: https://github.com/ultralytics/yolov5 . | Abra o notebook colab . | . Clique no √≠cone [ ] para rodar o c√≥digo de setup | . Aceite o aviso de que o notebook n√£o foi criado pela Google . | O √≠cone [ ] deve mudar para um s√≠mbolo de play . | E depois de ser executado ele se tornar√° um n√∫mero [1] . | Na aba chamada ‚ÄòInfer√®ncia‚Äô √© onde voc√™ ir√° colocar o v√≠deo que voc√™ quer detectar objetos. Existem varias op√ß√µes, mas a mais simples √© usar diretamente um v√≠deo do YouTube. Para isso, substitua o texto `data/images/¬¥ pelo link do video. ** No caso, eu escolhi o trailer do Homem-Aranha 3: https://www.youtube.com/watch?v=EZo8V4XgzPY **Remova tamb√©m a segunda linha. . | Clique no bot√£o de ‚ÄòPlay‚Äô e espere alguns minutos (depdendendo do tamanho do v√≠deo) . | Para baixar o video anotado, abra a arvore dos arquivos . | O arquivo se encontra em: yolov5/runs/detect/exp/video.mp4 . | Para baixar clique nos 3 pontos e depois em download . | Um circulo de progress√£o ser√° mostrado ao lado do nome do arquivo, quando ele ficar totalmente laranja o download ser√° iniciado. . | E √© isso! .",
            "url": "https://opassos.github.io/blog/2021/09/22/Tutorial-YoloV5.html",
            "relUrl": "/2021/09/22/Tutorial-YoloV5.html",
            "date": " ‚Ä¢ Sep 22, 2021"
        }
        
    
  
    
        ,"post2": {
            "title": "Ol√° Mundo",
            "content": "Miss&#227;o . Sou um apaixonado por Deep Learning e decidi juntar a minha experi√™ncia em sala de aula com essa paix√£o. Em minhas redes sociais vou te ensinar o caminho mais curto para se tornar um especialista em Machine Learning e se tornar um profissional desejado e mais bem pago. . Meus Links: . GitHub | Kaggle | LinkedIn | Instagram | YouTube | Facebook | .",
            "url": "https://opassos.github.io/blog/ol%C3%A1%20mundo/jupyter/2021/09/20/Ola-Mundo.html",
            "relUrl": "/ol%C3%A1%20mundo/jupyter/2021/09/20/Ola-Mundo.html",
            "date": " ‚Ä¢ Sep 20, 2021"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats.¬†&#8617; . |",
          "url": "https://opassos.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ ‚Äúsitemap.xml‚Äù | absolute_url }} | .",
          "url": "https://opassos.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}